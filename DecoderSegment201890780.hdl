CHIP DecoderSegment201890780 {
    IN A, B, C, D;    
    OUT c;            

    PARTS:
    //~a~d + ~ac + c~d + a~b                 

    Not(in=A, out=nota);
    Not(in=B, out=notb);
    Not(in=C, out=notc);
    Not(in=D, out=notd);

    And(a=nota, b=C, out=andout1);

    And(a=notb, b=notc, out=andout2);   
    And(a=andout2, b=notd, out=andout3);
    
    And(a=B, b=C, out=andout4);

    And(a=C, b=notd, out=andout5);

    And(a=A, b=notb, out=andout6);
    And(a=andout6, b=notc, out=andout7);




    Or(a=andout1, b=andout3, out=orout1);
    Or(a=orout1, b=andout4, out=orout2);
    Or(a=orout2, b=andout5, out=orout3);
    Or(a=orout3, b=andout7, out=c);
                              
}
